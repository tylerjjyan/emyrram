{
    "parser": "@babel/eslint-parser",
    "parserOptions": { "ecmaVersion": 8 },
    "extends": ["eslint:recommended", "plugin:react/recommended", "prettier"],
    "env": {
      "browser": true,
      "node": true,
      "es6": true
    },
    "globals": {
      "history": "off"
    },
    "plugins": ["react", "react-hooks", "prettier", "import"],
    "rules": {
      "react/jsx-uses-react": "off",
      "react/react-in-jsx-scope": "off",
      "react/jsx-key": 2,
      "import/no-unresolved": 2,
      "no-constant-condition": "warn",
      "react/require-extension": "off",
      "react/no-unused-prop-types": 0,
      "react/prop-types": 0,
      "react/forbid-prop-types": [
        "error",
        {
          "forbid": ["any"]
        }
      ],
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": "error",
      "no-nested-ternary": 1,
      "camelcase": 0,
      "react/jsx-equals-spacing": 0,
      "react/prefer-es6-class": 0,
      "react/wrap-multilines": 0,
      "no-unused-vars": 1,
      "no-multi-spaces": 1,
      "no-delete-var": 1,
      "no-shadow": 1,
      "no-restricted-globals": ["error", "event"],
      "max-depth": ["error", 3],
      "max-params": ["error", 3],
      "no-duplicate-imports": [
        "error",
        {
          "includeExports": true
        }
      ],
      "jsx-a11y/tabindex-no-positive": 0,
      "jsx-a11y/click-events-have-key-events": 0,
      "jsx-a11y/anchor-is-valid": 0,
      "semi": ["error", "never"],
      "no-restricted-syntax": ["error", "WithStatement", "switch"],
      "react/jsx-filename-extension": [
        2,
        { "extensions": [".js", ".jsx", ".ts", ".tsx"] }
      ]
    },
    "settings": {
      "import/resolver": {
        "typescript": {} // this loads <rootdir>/tsconfig.json to eslint
      },
      "react": {
        "version": "detect"
      }
    },
    "overrides": [
      // This configuration will apply only to TypeScript files
      {
        "files": ["**/*.ts", "**/*.tsx"],
        "parser": "@typescript-eslint/parser",
        "settings": { "react": { "version": "detect" } },
        "env": {
          "browser": true,
          "node": true,
          "es6": true
        },
        "extends": [
          "eslint:recommended",
          "plugin:@typescript-eslint/recommended", // TypeScript rules
          "plugin:react/recommended", // React rules
          "plugin:react-hooks/recommended", // React hooks rules
          "plugin:jsx-a11y/recommended" // Accessibility rules
        ],
        "rules": {
          // We will use TypeScript's types for component props instead
          "react/prop-types": "off",
  
          // No need to import React when using Next.js
          "react/react-in-jsx-scope": "off",
  
          // This rule is not compatible with Next.js's <Link /> components
          "jsx-a11y/anchor-is-valid": "off",
  
          // Why would you want unused vars?
          "@typescript-eslint/no-unused-vars": ["error"],
          "@typescript-eslint/no-explicit-any": "off",
          // I suggest this setting for requiring return types on functions only where useful
          "@typescript-eslint/explicit-function-return-type": [
            "warn",
            {
              "allowExpressions": true,
              "allowConciseArrowFunctionExpressionsStartingWithVoid": true
            }
          ]
        }
      }
    ]
  }
  